""" Euler Problem #2:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

max = 4000000
sumn = 0
# a and b - various members of the Fibonacci series
a = 1
b = 2
# while fibonacci number exceeds 4 millons
while a <= max:
    if (a % 2 == 0) and a >= max and (b % 2 == 0) and b >= max:
        break
    # check the number for evenness
    if (a % 2 == 0):
        sumn += a
    # check the number for evenness
    if (b % 2 == 0):
        sumn += b
    # build a row further
    a = a + b
    b = a + b

print(sumn)
